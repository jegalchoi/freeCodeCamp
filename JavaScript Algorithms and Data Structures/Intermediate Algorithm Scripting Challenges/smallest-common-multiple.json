{
  "index.js": "function smallestCommons(arr) {\n  let smaller = arr[0];\n  let bigger = arr[1];\n\n  if (arr[1] < arr[0]) {\n    smaller = arr[1];\n    bigger = arr[0];\n  };\n  console.log(`smaller: ${smaller}`);\n  console.log(`bigger: ${bigger}`);\n\n  let range = [];\n  for (let i = smaller; i <= bigger; i += 1) {\n    range.push(i);\n  };\n  console.log(`range: ${range}`);\n\n  let finalFactors = {};\n\n  range.forEach(function (number) {\n    let prime_factors = prime_factorize(number);\n    \n    let count_prime_factors = {};\n\n    prime_factors.forEach(function (factor) {\n      count_prime_factors[factor] ? count_prime_factors[factor] += 1 : count_prime_factors[factor] = 1;\n\n      if (finalFactors[factor] != undefined) {\n        if (count_prime_factors[factor] > finalFactors[factor]) {\n          finalFactors[factor] = count_prime_factors[factor]\n        };\n      } else {\n        finalFactors[factor] = count_prime_factors[factor];\n      };\n    });\n  });\n  \n  let answer = 1;\n  for (let i = 0; i < Object.keys(finalFactors).length; i += 1) {\n    answer *= Object.keys(finalFactors)[i] ** Object.values(finalFactors)[i];\n  };\n\n  console.log(finalFactors);\n  console.log(answer);\n  return answer;\n};  \n\nfunction prime_factorize(num) {\n  let arr = [];\n\n  if (prime(num)) {\n    return [num];\n  } else {\n    for (let i = 2; i < num; i += 1) {\n      if (num % i == 0 && prime(i)) {\n        arr.push(i);\n        let factor = num / i;\n        return arr.concat(prime_factorize(factor));\n      } else if (num % i == 0 && !prime(i)) {\n        return arr.concat(prime_factorize(i));\n      };\n    };\n  };\n\n  return arr;\n};\n\nfunction prime(num) {\n  if (num == 1) {\n    return false;\n  };\n  if (num == 2) {\n    return true;\n  };\n  for (let i = 2; i < num; i += 1) {\n    if (num % i == 0) {\n      return false;\n    };\n  };\n  return true;\n};\n\n//smallestCommons([1,5]); \n//smallestCommons([5, 1]);\n//smallestCommons([2, 10]);\n//smallestCommons([1, 13]);\n//smallestCommons([23, 18]);\n\n"
}